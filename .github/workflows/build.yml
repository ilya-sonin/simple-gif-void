name: Build, Test and Release

on:
  push:
    tags:
      - 'v*'  # Триггер только при пуше тегов, начинающихся с 'v'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: |
          pytest tests/ -v

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build binary
        run: |
          pyinstaller --onefile src/remove_background.py
      - name: Test binary (optional)
        run: |
          ./dist/remove_background --help
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: simple-gif-void-binary-linux
          path: dist/remove_background
          retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: simple-gif-void-binary-linux
          path: dist
      - name: Check if tag exists
        id: check_tag
        run: |
          if git rev-parse ${{ github.ref }} >/dev/null 2>&1; then
            echo "Tag already exists"
            echo "tag_exists=true" >> $GITHUB_OUTPUT
          else
            echo "Tag does not exist"
            echo "tag_exists=false" >> $GITHUB_OUTPUT
          fi
      - name: Create Release
        if: steps.check_tag.outputs.tag_exists == 'false'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/remove_background
          asset_name: remove_background
          asset_content_type: application/octet-stream
